package com.finalagc.www._1_2_MySql_DB_entities;
// Generated May 19, 2023 7:19:39 AM by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Employee generated by hbm2java
 */
@Entity
@Table(name="employee"
    ,catalog="agc_db"
    , uniqueConstraints = @UniqueConstraint(columnNames="National_number") 
)
public class Employee  implements java.io.Serializable {


     private Integer employeeId;
     private Branch branch;
     private Jobs jobs;
     private Shift shift;
     private String name;
     private String dateOfBirth;
     private String nationalNumber;
     private byte[] employeeImage;
     private String employeePassword;
     private Set<MakeContract> makeContracts = new HashSet<MakeContract>(0);
     private Set<EmployeePhoneNumbers> employeePhoneNumberses = new HashSet<EmployeePhoneNumbers>(0);
     private Set<Repair> repairs = new HashSet<Repair>(0);
     private Set<Tasks> taskses = new HashSet<Tasks>(0);
     private Set<Competition> competitions = new HashSet<Competition>(0);
     private Set<EmployeeAddress> employeeAddresses = new HashSet<EmployeeAddress>(0);
     private Set<TakSalary> takSalaries = new HashSet<TakSalary>(0);
     private Set<EmployeeAttendanceTime> employeeAttendanceTimes = new HashSet<EmployeeAttendanceTime>(0);

    public Employee() {
    }

	
    public Employee(Branch branch, Jobs jobs, Shift shift, String name, String dateOfBirth, String nationalNumber, String employeePassword) {
        this.branch = branch;
        this.jobs = jobs;
        this.shift = shift;
        this.name = name;
        this.dateOfBirth = dateOfBirth;
        this.nationalNumber = nationalNumber;
        this.employeePassword = employeePassword;
    }
    public Employee(Branch branch, Jobs jobs, Shift shift, String name, String dateOfBirth, String nationalNumber, byte[] employeeImage, String employeePassword, Set<MakeContract> makeContracts, Set<EmployeePhoneNumbers> employeePhoneNumberses, Set<Repair> repairs, Set<Tasks> taskses, Set<Competition> competitions, Set<EmployeeAddress> employeeAddresses, Set<TakSalary> takSalaries, Set<EmployeeAttendanceTime> employeeAttendanceTimes) {
       this.branch = branch;
       this.jobs = jobs;
       this.shift = shift;
       this.name = name;
       this.dateOfBirth = dateOfBirth;
       this.nationalNumber = nationalNumber;
       this.employeeImage = employeeImage;
       this.employeePassword = employeePassword;
       this.makeContracts = makeContracts;
       this.employeePhoneNumberses = employeePhoneNumberses;
       this.repairs = repairs;
       this.taskses = taskses;
       this.competitions = competitions;
       this.employeeAddresses = employeeAddresses;
       this.takSalaries = takSalaries;
       this.employeeAttendanceTimes = employeeAttendanceTimes;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="EmployeeID", unique=true, nullable=false)
    public Integer getEmployeeId() {
        return this.employeeId;
    }
    
    public void setEmployeeId(Integer employeeId) {
        this.employeeId = employeeId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Branch_ID", nullable=false)
    public Branch getBranch() {
        return this.branch;
    }
    
    public void setBranch(Branch branch) {
        this.branch = branch;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="JobId", nullable=false)
    public Jobs getJobs() {
        return this.jobs;
    }
    
    public void setJobs(Jobs jobs) {
        this.jobs = jobs;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ShiftID", nullable=false)
    public Shift getShift() {
        return this.shift;
    }
    
    public void setShift(Shift shift) {
        this.shift = shift;
    }

    
    @Column(name="Name", nullable=false, length=50)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="Date_of_birth", nullable=false, length=50)
    public String getDateOfBirth() {
        return this.dateOfBirth;
    }
    
    public void setDateOfBirth(String dateOfBirth) {
        this.dateOfBirth = dateOfBirth;
    }

    
    @Column(name="National_number", unique=true, nullable=false, length=25)
    public String getNationalNumber() {
        return this.nationalNumber;
    }
    
    public void setNationalNumber(String nationalNumber) {
        this.nationalNumber = nationalNumber;
    }

    
    @Column(name="employee_image")
    public byte[] getEmployeeImage() {
        return this.employeeImage;
    }
    
    public void setEmployeeImage(byte[] employeeImage) {
        this.employeeImage = employeeImage;
    }

    
    @Column(name="employee_password", nullable=false, length=50)
    public String getEmployeePassword() {
        return this.employeePassword;
    }
    
    public void setEmployeePassword(String employeePassword) {
        this.employeePassword = employeePassword;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="employee")
    public Set<MakeContract> getMakeContracts() {
        return this.makeContracts;
    }
    
    public void setMakeContracts(Set<MakeContract> makeContracts) {
        this.makeContracts = makeContracts;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="employee")
    public Set<EmployeePhoneNumbers> getEmployeePhoneNumberses() {
        return this.employeePhoneNumberses;
    }
    
    public void setEmployeePhoneNumberses(Set<EmployeePhoneNumbers> employeePhoneNumberses) {
        this.employeePhoneNumberses = employeePhoneNumberses;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="employee")
    public Set<Repair> getRepairs() {
        return this.repairs;
    }
    
    public void setRepairs(Set<Repair> repairs) {
        this.repairs = repairs;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="employee")
    public Set<Tasks> getTaskses() {
        return this.taskses;
    }
    
    public void setTaskses(Set<Tasks> taskses) {
        this.taskses = taskses;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="employee")
    public Set<Competition> getCompetitions() {
        return this.competitions;
    }
    
    public void setCompetitions(Set<Competition> competitions) {
        this.competitions = competitions;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="employee")
    public Set<EmployeeAddress> getEmployeeAddresses() {
        return this.employeeAddresses;
    }
    
    public void setEmployeeAddresses(Set<EmployeeAddress> employeeAddresses) {
        this.employeeAddresses = employeeAddresses;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="employee")
    public Set<TakSalary> getTakSalaries() {
        return this.takSalaries;
    }
    
    public void setTakSalaries(Set<TakSalary> takSalaries) {
        this.takSalaries = takSalaries;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="employee")
    public Set<EmployeeAttendanceTime> getEmployeeAttendanceTimes() {
        return this.employeeAttendanceTimes;
    }
    
    public void setEmployeeAttendanceTimes(Set<EmployeeAttendanceTime> employeeAttendanceTimes) {
        this.employeeAttendanceTimes = employeeAttendanceTimes;
    }




}


