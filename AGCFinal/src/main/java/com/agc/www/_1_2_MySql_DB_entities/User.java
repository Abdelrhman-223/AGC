package com.agc.www._1_2_MySql_DB_entities;
// Generated May 17, 2023 11:14:37 AM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name="user"
    ,catalog="agc_db"
)
public class User  implements java.io.Serializable {


     private Integer userId;
     private String userName;
     private String userGender;
     private Date birthDate;
     private Set<UserPhonNumber> userPhonNumbers = new HashSet<UserPhonNumber>(0);
     private Set<UserAddress> userAddresses = new HashSet<UserAddress>(0);
     private Set<UserWinCompetition> userWinCompetitions = new HashSet<UserWinCompetition>(0);
     private Set<UserUseMachine> userUseMachines = new HashSet<UserUseMachine>(0);
     private Set<UserWinPrize> userWinPrizes = new HashSet<UserWinPrize>(0);
     private Set<JoinedUser> joinedUsers = new HashSet<JoinedUser>(0);
     private Set<VisitBranch> visitBranches = new HashSet<VisitBranch>(0);
     private Set<UserSubscription> userSubscriptions = new HashSet<UserSubscription>(0);
     private Set<VisitCorner> visitCorners = new HashSet<VisitCorner>(0);

    public User() {
    }

	
    public User(String userName, String userGender, Date birthDate) {
        this.userName = userName;
        this.userGender = userGender;
        this.birthDate = birthDate;
    }
    public User(String userName, String userGender, Date birthDate, Set<UserPhonNumber> userPhonNumbers, Set<UserAddress> userAddresses, Set<UserWinCompetition> userWinCompetitions, Set<UserUseMachine> userUseMachines, Set<UserWinPrize> userWinPrizes, Set<JoinedUser> joinedUsers, Set<VisitBranch> visitBranches, Set<UserSubscription> userSubscriptions, Set<VisitCorner> visitCorners) {
       this.userName = userName;
       this.userGender = userGender;
       this.birthDate = birthDate;
       this.userPhonNumbers = userPhonNumbers;
       this.userAddresses = userAddresses;
       this.userWinCompetitions = userWinCompetitions;
       this.userUseMachines = userUseMachines;
       this.userWinPrizes = userWinPrizes;
       this.joinedUsers = joinedUsers;
       this.visitBranches = visitBranches;
       this.userSubscriptions = userSubscriptions;
       this.visitCorners = visitCorners;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="UserID", unique=true, nullable=false)
    public Integer getUserId() {
        return this.userId;
    }
    
    public void setUserId(Integer userId) {
        this.userId = userId;
    }

    
    @Column(name="User_name", nullable=false, length=50)
    public String getUserName() {
        return this.userName;
    }
    
    public void setUserName(String userName) {
        this.userName = userName;
    }

    
    @Column(name="User_gender", nullable=false, length=30)
    public String getUserGender() {
        return this.userGender;
    }
    
    public void setUserGender(String userGender) {
        this.userGender = userGender;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="Birth_date", nullable=false, length=10)
    public Date getBirthDate() {
        return this.birthDate;
    }
    
    public void setBirthDate(Date birthDate) {
        this.birthDate = birthDate;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="user")
    public Set<UserPhonNumber> getUserPhonNumbers() {
        return this.userPhonNumbers;
    }
    
    public void setUserPhonNumbers(Set<UserPhonNumber> userPhonNumbers) {
        this.userPhonNumbers = userPhonNumbers;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="user")
    public Set<UserAddress> getUserAddresses() {
        return this.userAddresses;
    }
    
    public void setUserAddresses(Set<UserAddress> userAddresses) {
        this.userAddresses = userAddresses;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="user")
    public Set<UserWinCompetition> getUserWinCompetitions() {
        return this.userWinCompetitions;
    }
    
    public void setUserWinCompetitions(Set<UserWinCompetition> userWinCompetitions) {
        this.userWinCompetitions = userWinCompetitions;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="user")
    public Set<UserUseMachine> getUserUseMachines() {
        return this.userUseMachines;
    }
    
    public void setUserUseMachines(Set<UserUseMachine> userUseMachines) {
        this.userUseMachines = userUseMachines;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="user")
    public Set<UserWinPrize> getUserWinPrizes() {
        return this.userWinPrizes;
    }
    
    public void setUserWinPrizes(Set<UserWinPrize> userWinPrizes) {
        this.userWinPrizes = userWinPrizes;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="user")
    public Set<JoinedUser> getJoinedUsers() {
        return this.joinedUsers;
    }
    
    public void setJoinedUsers(Set<JoinedUser> joinedUsers) {
        this.joinedUsers = joinedUsers;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="user")
    public Set<VisitBranch> getVisitBranches() {
        return this.visitBranches;
    }
    
    public void setVisitBranches(Set<VisitBranch> visitBranches) {
        this.visitBranches = visitBranches;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="user")
    public Set<UserSubscription> getUserSubscriptions() {
        return this.userSubscriptions;
    }
    
    public void setUserSubscriptions(Set<UserSubscription> userSubscriptions) {
        this.userSubscriptions = userSubscriptions;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="user")
    public Set<VisitCorner> getVisitCorners() {
        return this.visitCorners;
    }
    
    public void setVisitCorners(Set<VisitCorner> visitCorners) {
        this.visitCorners = visitCorners;
    }




}


